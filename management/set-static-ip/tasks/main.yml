---
- name: get netmask
  shell: ip -f inet a show {{ ansible_default_ipv4.interface }} | grep inet | awk '{ print $2 }' | rev | cut -d / -f1 | rev
  register: netmask

- name: read interface config file
  shell: cat /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
  register: defaultInterfaceInfo

- name: config /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
  replace:
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
  with_items:
        - { regexp: 'BOOTPROTO="dhcp"', line: 'BOOTPROTO="static"'} 

- name: add IPADDR, PREFIX, GATEWAY AND DNS to /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
  blockinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
        insertafter: "^BOOTPROTO=\"static\"" 
        state: present
        block: |
                IPADDR="{{ ansible_default_ipv4.address }}"
                PREFIX="{{ netmask.stdout }}"
                GATEWAY="{{ ansible_default_ipv4.gateway }}"
                DNS1="8.8.8.8"
                DNS2="8.8.4.4"
  when: defaultInterfaceInfo.stdout.find('BOOTPROTO="dhcp"') != -1

- name: reboot 
  shell: sleep 2 && shutdown -r now
  async: 1
  poll: 0

- name: waiting 30 secs for server to come back
  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=30 timeout=60
  become: false

